1.yum安装
	yum -y install subversion
	svnserve --version 检测是否安装成功(查看svn版本号)
	输入 rpm -ql subversion 查看安装位置
	
2.创建SVN版本库目录
	mkdir -p /home/svn/
	
3.创建版本库(可创建多个版本库)
	svnadmin create /home/svn/repos1
	
	cd /home/svn/repos1
	//会看到自动生成的版本库文件
	conf  db  format  hooks  locks  README.txt
	
4.配置SVN
	1.进入conf目录（该svn版本库配置文件）
		authz文件是权限控制文件
		passwd是帐号密码文件
		svnserve.conf SVN服务配置文件
		
5.设置帐号密码
	vi passwd
	在[users]块中添加用户和密码，格式：帐号=密码，如dan=dan
	
6.设置权限
	vi authz
	在末尾添加如下代码：
	[/]
	dan=rw
	w=r
	意思是版本库的根目录dan对其有读写权限，w只有读权限
	
	[groups]
	admin = admin         #admin为用户组,等号之后的admin为用户
	test = fuhd,test

	[wangwa:/]                #表示根目录（/var/svn/wangwa），wangwa: 对应前面配置的realm = wangwa
	@admin = rw            ＃表示admin组对根目录有读写权限,r为读，w为写

	[wangwa:/test]         #表示test目录（/var/svn/wangwa/test）
	@test = rw                #表示test组对test目录有读写权限
	
	仓库有两种类型设置：
			1.启动运行多个仓库服务 svnserve -d -r h:/svnServer/app/
				[shop:/] 表示我们要给多个仓库中的具体shop仓库设置访问权限
				
			2.启动运行单一仓库服务 svnserve -d -r h:/svnServer/app/shop
				[/] 表示给单一的仓库账号设置访问权限
				
7.修改svnserve.conf文件
	vi svnserve.conf
	打开下面的几个注释：
	anon-access = none #匿名用户无权限
	auth-access = write #授权用户可写
	password-db = passwd #使用哪个文件作为账号文件
	authz-db = authz #使用哪个文件作为权限文件
	realm = /home/svn/repos1 # 认证空间名，版本库所在目录
	
8.启动svn版本库
	svnserve -d -r /home/svn/repos1(多版本则去掉repos1即可)    # -d : 守护进程  -r : svn数据根目录
	ps aux|grep svnserve               #查看SVN服务,默认端口为：3690

9.配置防火墙端口
	firewall-cmd --permanent -add-port=3690/tcp
	firewall-cmd --reload
	
10.设置开机启动
	systemctl enable svnserve.service
	
	#设置开机启动后就可以按下面的方式开启或停止服务了
	systemctl start svnserve.service
	systemctl stop svnserve.service
	
11.使用SVN中post-commit实现自动实时从svn中检出文件并同步到Web站点根目录
	当svn项目中有任何修改更新时，系统会自动实时从svn中检出文件并同步到Web站点根目录
	cd /home/svn/sy/hooks
	cp post-commit.tmpl post-commit
	vim post-commit
	
		#!/bin/sh
		REPOS="$1"
		REV="$2"
		SVN_PATH=/usr/bin
		WEB_PATH=/home/www/sy.cena.com
		SVN_USER=chendujin
		SVN_PASS=chendujin
		WEB_USER=www
		LOG_PATH=/tmp/svn.log
		echo `date "+%Y-%m-%d %H:%M:%S"` >> $LOG_PATH
		echo `whoami`,$REPOS,$REV >> $LOG_PATH
		$SVN_PATH/svn update $WEB_PATH --username $SVN_USER --password $SVN_PASS --no-auth-cache >> $LOG_PATH
		chown $WEB_USER.$WEB_USER -R $WEB_PATH
	
	:wq #保存退出
	chown www:www /home/svn/sy/hooks/post-commit #设置脚本所属用户组，www为web服务运行账户和组
	chmod +x /home/svn/sy/hooks/post-commit #添加脚本执行权限
	
	说明:
	whoami #执行此程序的用户
	REPOS="$1" #svn项目绝对路径值
	REV="$2" #最新版本号
	--no-auth-cache #不保存账户认证信息
	
	
12.测试
	1.服务端测试
		//我们在web目录测试（/home/www）,要同步更新至网站根目录,必须先在网站根目录中checkout一次
		cd /home/www
		svn co svn://localhost/project(根据情况定) /home/www/sy.cena.com (网站根目录)       #如果提示：Checked out revision 1.  表示checkout成功
		
		 我们添加新文件来测试是否提交成功
			cd /home/www
			touch index.php
			svn add index.php   //成功的话会显示  A index.php
			svn commit index.php -m "测试提交文件"
		假如最后提示：
			Adding         index.php
			Transmitting file data .
			Committed revision 2.
		则表示我们svn服务器搭建成功！文件已经能够推送了。
		
		
		如果报这样的错：svn: E204900: Can't open file '/var/svn/wangwa/format': Permission 				denied的错误。那就是与SELinux有关系，目前我还不太会用SELinux，那就先把SELinux关闭吧
			临时关闭： setenforce 0
			永久关闭： vim /etc/sysconfig/selinux
						SELINUX = disable               #值修改为disable.
		
		
	2.新建一个空文件夹，右键-->checkout,新建test.php文件，add--->commit;
		查看网站根目录是否有test.php生成
		
				
				
				
